variables:
  BUILD_IMAGES_PROJECT: gnutls/build-images
  FEDORA_BUILD: buildenv-f30
  DEBIAN_X86_CROSS_BUILD: buildenv-debian-x86-cross
  GET_SOURCES_ATTEMPTS: "3"

# See http://doc.gitlab.com/ce/ci/yaml/ for documentation.
x86-64:
  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$FEDORA_BUILD
  script:
  - yum remove -y libtasn1-devel
  - git submodule update --init && make autoreconf
  - ./configure --disable-doc && make -j$(nproc)
  - make abi-check
  - make -j$(nproc) check
  - make dist
  except:
  - tags
  tags:
  - shared

x86:
  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$DEBIAN_X86_CROSS_BUILD
  script:
  - build=$(dpkg-architecture -qDEB_HOST_GNU_TYPE)
  - host=i686-linux-gnu
  - export CC_FOR_BUILD="gcc"
  - export CC="$host-gcc"
  - git submodule update --init && make autoreconf
  - mkdir -p build
  - cd build
  - dash ../configure --build=$build --host=$host --disable-doc
  - make -j$(nproc)
  - make check -j$(nproc)
  - cd ..
  tags:
  - shared
  - docker
  except:
  - tags
  artifacts:
    expire_in: 1 week
    when: on_failure
    paths:
      - build/guile/tests/*.log
      - build/*.log
      - build/tests/*.log
      - build/tests/*/*.log
      - build/tests/suite/*/*.log
  retry: 1

clang:
  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$FEDORA_BUILD
  script:
  - yum remove -y libtasn1-devel
  - git submodule update --init && make autoreconf
  - CC=clang ./configure --disable-doc --disable-valgrind-tests && make -j$(nproc)
  - make check -j$(nproc)
  except:
  - tags
  tags:
  - shared

asan:
  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$FEDORA_BUILD
  script:
  - yum remove -y libtasn1-devel
  - git submodule update --init && make autoreconf && CFLAGS="-fsanitize=address -g
    -O2" LDFLAGS="-static-libasan" ./configure --disable-doc --disable-valgrind-tests && make -j$(nproc) && make check -j$(nproc)
  except:
  - tags
  tags:
  - shared

ubsan:
  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$FEDORA_BUILD
  script:
  - yum remove -y libtasn1-devel
  - git submodule update --init && make autoreconf && CFLAGS="-fsanitize=undefined -fno-sanitize-recover -g
    -O2" ./configure --disable-doc --disable-valgrind-tests && make -j$(nproc) && make check -j$(nproc)
  tags:
  - shared
  except:
  - tags

MinGW32:
  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$FEDORA_BUILD
  script:
  - dnf install -y wine.i686 mingw32-gcc util-linux
  - mount -t binfmt_misc binfmt_misc /proc/sys/fs/binfmt_misc
  - echo ':DOSWin:M::MZ::/usr/bin/wine:' > /proc/sys/fs/binfmt_misc/register
  - make autoreconf && rm -f tests/suite/mini-eagain2.c && mkdir -p build && cd build &&
    mingw32-configure --disable-doc --disable-valgrind-tests &&
    mingw32-make -j$(nproc) && mingw32-make -C tests check -j$(nproc)
  tags:
  - shared
  - docker
  except:
  - tags
  artifacts:
    expire_in: 1 week
    when: on_failure
    paths:
      - build/*.log
      - build/tests/*.log
      - build/tests/*/*.log

gnutls:
  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$FEDORA_BUILD
  script:
  - yum remove -y libtasn1-devel
  - make autoreconf
  - ./configure --disable-doc --prefix=/usr --libdir=/usr/lib64 &&
    make -j$(nproc) && make install
  - git clone --depth 1 --branch master https://gitlab.com/gnutls/gnutls.git gnutls-git
  - cd gnutls-git && git submodule update --init && ./bootstrap &&
    ./configure --disable-cxx --disable-guile --disable-doc && make -j$(nproc) &&
    make -j $(nproc) check
  tags:
  - shared
  except:
  - tags
  artifacts:
    expire_in: 1 week
    when: on_failure
    paths:
      - gnutls-git/guile/tests/*.log
      - gnutls-git/tests/*.log
      - gnutls-git/*.log
      - gnutls-git/tests/*/*.log
      - gnutls-git/tests/suite/*/*.log

static-analyzers:
  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$FEDORA_BUILD
  script:
  - git submodule update --init && make autoreconf
  - scan-build ./configure --disable-doc
  - make -j$(nproc) syntax-check
  - make -j$(nproc) -C lib/gl
  - make -j$(nproc) -C lib ASN1.lo
  - scan-build --status-bugs -o scan-build-lib make -j$(nproc) -C lib
  tags:
  - shared
  except:
  - tags
  artifacts:
    expire_in: 1 week
    when: on_failure
    paths:
      - scan-build-lib/

# Target to run code coverage on non-master branches. That is intended
# to ensure that compilation in master will not break the pages rule.
pages-test:
  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$FEDORA_BUILD
  script:
  - git submodule update --init && make autoreconf
  - ./configure --enable-gtk-doc --disable-gcc-warnings
  - make -C doc libtasn1.html libtasn1.pdf
  tags:
  - shared
  except:
    - master

pages:
  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$FEDORA_BUILD
  script:
  - git submodule update --init && make autoreconf
  - ./configure --enable-gtk-doc --disable-gcc-warnings
  - mkdir -p public
  - make -C doc libtasn1.html libtasn1.pdf
  - mv doc/libtasn1.pdf doc/libtasn1.html public/
  - cp public/libtasn1.html public/index.html
  tags:
  - shared
  artifacts:
    when: on_success
    paths:
      - public
  only:
    - master
